name: rule-server-preview

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
    paths:
      - services/rule/**
      - .github/workflows/rule-server-preview.yaml
  issue_comment:
    types: [created]

jobs:
  rule-server-unit-test-x86:
    if: |
      github.event_name == 'issue_comment' &&
      contains(github.event.comment.body, 'test') &&
      github.event.issue.pull_request != null &&
      github.event.pull_request.changed_files > 0
    name: Rule server unit tests
    runs-on: ubicloud-standard-2
    strategy:
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.8.3"]

    steps:
      - name: Check for path changes
        id: path-check
        run: |
          echo "Checking for changes in specified paths..."
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E 'services/rule/|\.github/workflows/rule-server-pull\.yaml' || echo "no-changes"

      - uses: actions/checkout@v4
        if: steps.path-check.outputs.result != 'no-changes'
        with:
          repository: openshieldai/openshield
          ref: refs/pull/${{ github.event.issue.number }}/merge

      - name: Set up Python ${{ matrix.python-version }}
        if: steps.path-check.outputs.result != 'no-changes'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run poetry action
        if: steps.path-check.outputs.result != 'no-changes'
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        if: steps.path-check.outputs.result != 'no-changes'
        run: |
          cd services/rule
          poetry install

      - name: Run unit tests
        if: steps.path-check.outputs.result != 'no-changes'
        run: |
          cd services/rule/src/tests
          poetry run python -m unittest test_api.py

  rule-server-unit-test-arm:
    if: |
      github.event_name == 'issue_comment' &&
      contains(github.event.comment.body, 'test') &&
      github.event.issue.pull_request != null &&
      github.event.pull_request.changed_files > 0
    name: Rule server unit tests
    runs-on: ubicloud-standard-2-arm
    strategy:
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.8.3"]

    steps:
      - name: Check for path changes
        id: path-check
        run: |
          echo "Checking for changes in specified paths..."
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E 'services/rule/|\.github/workflows/rule-server-pull\.yaml' || echo "no-changes"

      - uses: actions/checkout@v4
        if: steps.path-check.outputs.result != 'no-changes'
        with:
          repository: openshieldai/openshield
          ref: refs/pull/${{ github.event.issue.number }}/merge

      - name: Set up Python ${{ matrix.python-version }}
        if: steps.path-check.outputs.result != 'no-changes'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run poetry action
        if: steps.path-check.outputs.result != 'no-changes'
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        if: steps.path-check.outputs.result != 'no-changes'
        run: |
          cd services/rule
          poetry install

      - name: Run unit tests
        if: steps.path-check.outputs.result != 'no-changes'
        run: |
          cd services/rule/src/tests
          poetry run python -m unittest test_api.py

  rule-service-docker-build:
    if: |
      github.event_name == 'issue_comment' &&
      contains(github.event.comment.body, 'test') &&
      github.event.issue.pull_request != null &&
      github.event.pull_request.changed_files > 0
    runs-on: ubicloud-standard-2
    steps:
      - name: Check for path changes
        id: path-check
        run: |
          echo "Checking for changes in specified paths..."
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E 'services/rule/|\.github/workflows/rule-server-pull\.yaml' || echo "no-changes"

      - name: Login to Github Packages
        if: steps.path-check.outputs.result != 'no-changes'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        if: steps.path-check.outputs.result != 'no-changes'
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: üèó Setup repo
        if: steps.path-check.outputs.result != 'no-changes'
        uses: actions/checkout@v4

      - name: Set up Docker Context for Buildx
        if: steps.path-check.outputs.result != 'no-changes'
        run: docker context create builders

      - name: Set up Docker Buildx
        if: steps.path-check.outputs.result != 'no-changes'
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          endpoint: builders

      - name: Docker meta
        if: steps.path-check.outputs.result != 'no-changes'
        id: rule-service
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/openshieldai/openshield/rule
          tags: |
            type=sha
            type=raw,value=latest

      - name: Build
        if: steps.path-check.outputs.result != 'no-changes'
        uses: docker/build-push-action@v6
        with:
          context: services/rule
          platforms: linux/arm64,linux/amd64
          push: false
          tags: ${{ steps.rule-service.outputs.tags }}
          labels: ${{ steps.rule-service.outputs.labels }}
