name: Rule-server-unit-test

on:
  pull_request_review:
     types: [submitted]
     branches:
        - main
     paths:
        - services/rule-service/**
        - .github/workflows/rule-server-pull.yaml

jobs:
  rule-server-unit-test-x86:
      if: github.event.review.state == 'approved'
      name: Rule server unit tests
      runs-on: ubicloud-standard-2
      strategy:
        matrix:
          python-version: ["3.11"]
          poetry-version: ["1.8.3"]

      steps:
        - uses: actions/checkout@v4
          with:
            repository: openshieldai/openshield
            ref: refs/pull/${{ github.event.pull_request.number }}/merge
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python-version }}
        - name: Run poetry action
          uses: abatilo/actions-poetry@v3
          with:
            poetry-version: ${{ matrix.poetry-version }}
        - name: Install dependencies
          run: |
            cd rules/rule-service
            poetry install
        - name: Run unit tests
          run: |
            cd rules/rule-service/rule_service/tests
            poetry run python -m unittest test_api.py
  rule-server-unit-test-arm:
    if: github.event.review.state == 'approved'
    name: Rule server unit tests
    runs-on: ubicloud-standard-2-arm
    strategy:
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.8.3"]

    steps:
      - uses: actions/checkout@v4
        with:
          repository: openshieldai/openshield
          ref: refs/pull/${{ github.event.pull_request.number }}/merge
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run poetry action
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: |
          cd service/rule
          poetry install
      - name: Run unit tests
        run: |
          cd rules/rule-service/rule_service/tests
          poetry run python -m unittest test_api.py

  rule-service-docker-build:
    if: github.event.review.state == 'approved'
    runs-on: ubicloud-standard-2
    steps:
      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: üèó Setup repo
        uses: actions/checkout@v4

      - name: Set up Docker Context for Buildx
        run: docker context create builders

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          endpoint: builders

      - name: Docker meta
        id: rule-service
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/openshieldai/openshield/rule
          tags: |
            type=sha
            type=raw,value=latest

      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: services/rule
          platforms: linux/arm64,linux/amd64
          push: false
          tags: ${{ steps.api.outputs.tags }}
          labels: ${{ steps.api.outputs.labels }}